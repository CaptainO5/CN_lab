# -*- coding: utf-8 -*-
"""subnetting.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XPCODDda0PLSHGt9I1UTAYZ_kb1X260_
"""

def dec_to_bin(n):
  b  = bin(n) 
  return b.replace("0b", "0"*(10 - len(b)))

dec_to_bin(20)

N = int(input("Enter number of physical addresses: "))
H = int(input("Enter number of Hosts per physical address: "))

ip = input("Enter IP address (Target): ")
ip = ip.split('.')
# b_ip = []
# for i in ip:
#   b_ip.append(dec_to_bin(int(i)))

cls = 'C'
if H * N > 2**8 - 2:
  cls = 'B'
if H * N > 2**16 - 2:
  cls = 'A'

# Number of subnets
n_s = len(bin(N)) - 2

# Subnet Mask
s_m = ''
sn = '1' * n_s + '0' * (8 - n_s)

nhpsn = -1 # Number of hosts per subnet

if cls == 'A':
  nhpsn += int("1"*(32 - n_s), 2)
  s_m += "255." + str(int(sn, 2)) + ".0.0"
elif cls == 'B':
  nhpsn += int("1"*(16 - n_s), 2)
  s_m += "255.255." + str(int(sn, 2)) + ".0"
else:
  nhpsn += int("1"*(8 - n_s), 2)
  s_m += "255.255.255." + str(int(sn, 2))

s_a = ""
b_a = ""
fHID = ""
lHIS = ""
sm = s_m.split('.')
for i in range(4):
  if i == 3:
    b_a = s_a + "255"
    fHID = s_a + "1"
    lHID = s_a + "254"
    s_a += str(int(sm[i]) & int(ip[i]))
  else:  
    s_a += str(int(sm[i]) & int(ip[i])) + "."

print("Number of subnets:\t", n_s)
print("Subnet mask:\t", s_m)
print("Broadcast address (Target):\t", b_a)
print("Number of Hosts per subnet:\t", nhpsn)
print("First Host ID:\t", fHID)
print("Last Host ID:\t", lHID)
print("Subnet address:\t", s_a) 
input()